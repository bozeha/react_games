[{"C:\\Users\\boze\\Desktop\\c#\\project\\ignite\\src\\index.js":"1","C:\\Users\\boze\\Desktop\\c#\\project\\ignite\\src\\App.js":"2","C:\\Users\\boze\\Desktop\\c#\\project\\ignite\\src\\reducers\\index.js":"3","C:\\Users\\boze\\Desktop\\c#\\project\\ignite\\src\\reducers\\gamesReducer.js":"4","C:\\Users\\boze\\Desktop\\c#\\project\\ignite\\src\\actions\\gamesAction.js":"5","C:\\Users\\boze\\Desktop\\c#\\project\\ignite\\src\\getApiUrl.js":"6","C:\\Users\\boze\\Desktop\\c#\\project\\ignite\\src\\pages\\Home.js":"7","C:\\Users\\boze\\Desktop\\c#\\project\\ignite\\src\\components\\Game.js":"8","C:\\Users\\boze\\Desktop\\c#\\project\\ignite\\src\\components\\GlobalStyle.js":"9","C:\\Users\\boze\\Desktop\\c#\\project\\ignite\\src\\actions\\detailsAction.js":"10","C:\\Users\\boze\\Desktop\\c#\\project\\ignite\\src\\reducers\\detailReducer.js":"11","C:\\Users\\boze\\Desktop\\c#\\project\\ignite\\src\\components\\GameDetails.js":"12","C:\\Users\\boze\\Desktop\\c#\\project\\ignite\\src\\Utils.js":"13","C:\\Users\\boze\\Desktop\\c#\\project\\ignite\\src\\components\\Nav.js":"14","C:\\Users\\boze\\Desktop\\c#\\project\\ignite\\src\\animation.js":"15"},{"size":1122,"mtime":1612794499063,"results":"16","hashOfConfig":"17"},{"size":399,"mtime":1612794618356,"results":"18","hashOfConfig":"17"},{"size":255,"mtime":1612702094371,"results":"19","hashOfConfig":"17"},{"size":886,"mtime":1613039291491,"results":"20","hashOfConfig":"17"},{"size":1302,"mtime":1613042012130,"results":"21","hashOfConfig":"17"},{"size":2458,"mtime":1613082203540,"results":"22","hashOfConfig":"17"},{"size":7332,"mtime":1613083254634,"results":"23","hashOfConfig":"17"},{"size":1601,"mtime":1613081123895,"results":"24","hashOfConfig":"17"},{"size":712,"mtime":1613047832441,"results":"25","hashOfConfig":"17"},{"size":755,"mtime":1612853998591,"results":"26","hashOfConfig":"17"},{"size":488,"mtime":1612854571135,"results":"27","hashOfConfig":"17"},{"size":5056,"mtime":1613083331597,"results":"28","hashOfConfig":"17"},{"size":941,"mtime":1613082383665,"results":"29","hashOfConfig":"17"},{"size":1276,"mtime":1613083382495,"results":"30","hashOfConfig":"17"},{"size":219,"mtime":1613081025762,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1vks3lu",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\boze\\Desktop\\c#\\project\\ignite\\src\\index.js",[],["68","69"],"C:\\Users\\boze\\Desktop\\c#\\project\\ignite\\src\\App.js",["70"],"import React, { useEffect } from \"react\";\nimport Home from \"./pages/Home\";\nimport GlobalStyle from \"./components/GlobalStyle\";\n\nimport { Route } from \"react-router-dom\";\n\nfunction App() {\n  ///dispatch can get object or function\n\n  return (\n    <div className=\"App\">\n      <GlobalStyle />\n      <Route path={[\"game/:id\", \"/\"]}>\n        <Home />\n      </Route>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\boze\\Desktop\\c#\\project\\ignite\\src\\reducers\\index.js",[],"C:\\Users\\boze\\Desktop\\c#\\project\\ignite\\src\\reducers\\gamesReducer.js",[],"C:\\Users\\boze\\Desktop\\c#\\project\\ignite\\src\\actions\\gamesAction.js",[],"C:\\Users\\boze\\Desktop\\c#\\project\\ignite\\src\\getApiUrl.js",[],"C:\\Users\\boze\\Desktop\\c#\\project\\ignite\\src\\pages\\Home.js",["71","72","73"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadGames } from \"../actions/gamesAction\";\r\nimport styled from \"styled-components\";\r\nimport { motion, AnimatePresence, AnimateSharedLayout } from \"framer-motion\";\r\nimport Game from \"../components/Game\";\r\nimport { popularGames } from \"../getApiUrl\";\r\nimport GameDetails from \"../components/GameDetails\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Nav from \"../components/Nav\";\r\n\r\nimport loader from \"../img/loader.gif\";\r\n\r\nconst Home = () => {\r\n  const location = useLocation();\r\n  const path = location.pathname.split(\"/\");\r\n  console.log(`${path}`);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    //exampel of dispatch gets function\r\n    dispatch(loadGames());\r\n\r\n    /// example for despatch get object\r\n    /* dispatch({\r\n        type: \"FETCH_GAMES\",\r\n        payload: { popular: [\"sssssssssss\", \"ffffffff\", \"eeeeeeee\"] },\r\n      }); */\r\n  }, [dispatch]);\r\n  //const data = useSelector((state) => state.Games);\r\n  //const data = useSelector((state) => state.Game);\r\n  //console.log(data);\r\n  const { upcoming, newGames, popular, isLoading, search } = useSelector(\r\n    (state) => state.games\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {isLoading && (\r\n        <Loader>\r\n          <img src={loader} alt=\"loader\" />\r\n        </Loader>\r\n      )}\r\n      {!isLoading && (\r\n        <AnimateSharedLayout>\r\n          <Nav />\r\n          <div className=\"\">\r\n            <AnimatePresence>\r\n              {path[2] && <GameDetails id={path[2]} />}\r\n            </AnimatePresence>\r\n            {search.length != 0 && (\r\n              <SearchResultStyle>\r\n                <h2>Search results</h2>\r\n                {search.map((currentGame, index) => (\r\n                  <Game\r\n                    name={currentGame.name}\r\n                    released={currentGame.released}\r\n                    img={currentGame.background_image}\r\n                    key={\r\n                      currentGame.key\r\n                        ? currentGame.key\r\n                        : currentGame.name + index\r\n                    }\r\n                    current_index={index}\r\n                    id={currentGame.id}\r\n                  >\r\n                    {/* {console.log(index)} */}\r\n                  </Game>\r\n                ))}\r\n              </SearchResultStyle>\r\n            )}\r\n            <h2>Upcoming Games</h2>\r\n            <Games>\r\n              {upcoming &&\r\n                upcoming.map((currentGame, index) => (\r\n                  <Game\r\n                    name={currentGame.name}\r\n                    released={currentGame.released}\r\n                    img={currentGame.background_image}\r\n                    key={\r\n                      currentGame.key\r\n                        ? currentGame.key\r\n                        : currentGame.name + index\r\n                    }\r\n                    current_index={index}\r\n                    id={currentGame.id}\r\n                  >\r\n                    {/* {console.log(index)} */}\r\n                  </Game>\r\n                ))}\r\n            </Games>\r\n            <h2>New Games</h2>\r\n            <Games>\r\n              {newGames &&\r\n                newGames.map((currentGame, index) => (\r\n                  <Game\r\n                    name={currentGame.name}\r\n                    released={currentGame.released}\r\n                    img={currentGame.background_image}\r\n                    key={\r\n                      currentGame.key\r\n                        ? currentGame.key\r\n                        : currentGame.name + index\r\n                    }\r\n                    current_index={index}\r\n                    id={currentGame.id}\r\n                  >\r\n                    {/* {console.log(index)} */}\r\n                  </Game>\r\n                ))}\r\n            </Games>\r\n            <h2>Popular Games</h2>\r\n            <Games>\r\n              {popular &&\r\n                popular.map((currentGame, index) => (\r\n                  <Game\r\n                    name={currentGame.name}\r\n                    released={currentGame.released}\r\n                    img={currentGame.background_image}\r\n                    key={\r\n                      currentGame.key\r\n                        ? currentGame.key\r\n                        : currentGame.name + index\r\n                    }\r\n                    current_index={index}\r\n                    id={currentGame.id}\r\n                  >\r\n                    {/* {console.log(index)} */}\r\n                  </Game>\r\n                ))}\r\n            </Games>\r\n          </div>\r\n        </AnimateSharedLayout>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\n//// flex\r\n\r\n/* const Games = styled(motion.div)`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  justify-content: space-around;\r\n`;\r\n */\r\n//// gred\r\n\r\nconst Games = styled(motion.div)`\r\n  /// display the grid as the size of the element\r\n  display: inline-grid;\r\n  /// display the grid on all page\r\n  display: grid;\r\n\r\n  //// this make constent number of element as number of auto , this case alwase 3 elements\r\n  //// first element 80px second 200px therd the rest of the space\r\n  grid-template-columns: 80px 200px auto;\r\n  //// this make constent number of element as number of auto , this case alwase 3 elements\r\n  grid-template-columns: auto auto auto;\r\n\r\n  /// gap is extra space between every column\r\n  grid-column-gap: 10px;\r\n  /// gap is extra space between every row\r\n  grid-row-gap: 10px;\r\n  /// gap is extra space between every row and column\r\n  grid-gap: 10px;\r\n\r\n  //// repeat if settings are repeate , first value is how meny times to repeat\r\n  /// secend value is how to display element we repeat\r\n  /// this case repeate 4 times in equals fraction\r\n  grid-template-columns: repeat(4, 1fr);\r\n  /// hist will repeate 4 times and every columns will be in the size of is content\r\n  grid-template-columns: repeat(4, auto);\r\n  /// this will make the first column to be 100px and others like above exmple\r\n  grid-template-columns: 100px repeat(4, auto);\r\n\r\n  //// 1fr its one equal fraction\r\n  //// repeat -> repeat on all elements , gets to values\r\n  //// first how meny time to rpeate , in this case auto-fit , its can change number of elements\r\n  //// automaticly , and second element is how every element will look like\r\n  //// in this case minmax -> first value is the minimum size and max is the max site\r\n\r\n  grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));\r\n\r\n  align-items: center;\r\n\r\n  overflow: hidden;\r\n  /* .game0 {\r\n    background-color: red;\r\n\r\n    //// grid column take palce of few elements ->this case from element 1 to element 3\r\n     \r\n    //width: 100%;\r\n    //grid-column-start: 1;\r\n    //grid-column-end: 3; \r\n    //// grid row take palce of few elements ->this case from element 1 to element 3\r\n    height: 100%;\r\n    grid-row-start: 1;\r\n    grid-row-end: 3;\r\n  } */\r\n\r\n  h3,\r\n  h4 {\r\n    padding: 5px 0px 5px 5px;\r\n  }\r\n`;\r\n\r\nconst SearchResultStyle = styled(Games)`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: row;\r\n  overflow: hidden;\r\n  justify-content: space-around;\r\n`;\r\n\r\nconst Loader = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  position: fixed;\r\n  img {\r\n    margin: 0 auto;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport default Home;\r\n","C:\\Users\\boze\\Desktop\\c#\\project\\ignite\\src\\components\\Game.js",["74"],"import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport { gameDetails } from \"../actions/detailsAction\";\r\nimport { loadGames } from \"../actions/gamesAction\";\r\nimport { getResizedImg } from \"../Utils\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/// animation\r\nimport { ResizeImg } from \"../animation\";\r\n\r\nconst Game = ({ name, released, img, current_index, id }) => {\r\n  const dispatch = useDispatch();\r\n  const HandeldGameClick = () => {\r\n    dispatch(gameDetails(id));\r\n    document.body.style.overflow = \"hidden\";\r\n  };\r\n  return (\r\n    <Link to={`/game/${id}`}>\r\n      <GameStyle\r\n        variants={ResizeImg}\r\n        initial=\"hidden\"\r\n        animate=\"show\"\r\n        className={`game${current_index}`}\r\n        onClick={HandeldGameClick}\r\n        layoutId={id && id.toString()}\r\n      >\r\n        {console.log(id)}\r\n        <h3>{name}</h3>\r\n        <h4>{released}</h4>\r\n        <img src={getResizedImg(img, 420)} alt=\"\" layoutId={img} />\r\n      </GameStyle>\r\n    </Link>\r\n  );\r\n};\r\n//// flex\r\n/* const GameStyle = styled(motion.div)`\r\n  height: 300px;\r\n  width: 300px;\r\n  img {\r\n    width: 100%;\r\n    height: 200px;\r\n    object-fit: fill;\r\n  }\r\n`;\r\n */\r\n/// grid\r\nconst GameStyle = styled(motion.div)`\r\n  cursor: pointer;\r\n  height: 300px;\r\n  width: 300px;\r\n  margin: 0 auto;\r\n  box-shadow: 1px 1px 1px 1px gray;\r\n  border-radius: 4px;\r\n  padding-bottom: 10px;\r\n  margin-bottom: 5px;\r\n  img {\r\n    width: 100%;\r\n    height: 200px;\r\n    object-fit: fill;\r\n  }\r\n`;\r\n\r\nexport default Game;\r\n","C:\\Users\\boze\\Desktop\\c#\\project\\ignite\\src\\components\\GlobalStyle.js",["75"],"import styled from \"styled-components\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n*{\r\n    margin:0;\r\n    padding:0;\r\n    box-sizing:border-box;\r\n}\r\n\r\nhtml{\r\n    &::-webkit-scrollbar {\r\n        width:0.5rem;\r\n    }\r\n    &::-webkit-scrollbar-thumb{\r\n        background-color: darkgray;\r\n    }\r\n}\r\nbody{\r\n    font-family: \"Montserrot\", sans-serif;\r\n    width:100%;\r\n}\r\nh2{\r\n    font-size:3rem;\r\n    font-family: \"Abril FatFace\", cursive;\r\n    display:inline-block;\r\n    width:100%;\r\n}\r\n\r\ninput {\r\n    font-weight: bold;\r\n    font-family: \"Monserrot\", sans-serif;\r\n}\r\n\r\na{\r\n    text-decoration:none;\r\n    color:black;\r\n}\r\n\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","C:\\Users\\boze\\Desktop\\c#\\project\\ignite\\src\\actions\\detailsAction.js",[],"C:\\Users\\boze\\Desktop\\c#\\project\\ignite\\src\\reducers\\detailReducer.js",[],"C:\\Users\\boze\\Desktop\\c#\\project\\ignite\\src\\components\\GameDetails.js",["76","77","78","79","80","81","82","83"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getResizedImg } from \"../Utils\";\r\n//// import images\r\n\r\nimport apple from \"../img/apple.svg\";\r\nimport gamepad from \"../img/gamepad.svg\";\r\nimport nintendo from \"../img/nintendo.svg\";\r\nimport playstation from \"../img/playstation.svg\";\r\nimport xbox from \"../img/xbox.svg\";\r\nimport full_star from \"../img/star-full.png\";\r\nimport empty_star from \"../img/star-empty.png\";\r\n\r\nconst GameDetails = (id) => {\r\n  const { game, screen, isLoading } = useSelector((state) => state.game);\r\n  const history = useHistory();\r\n\r\n  const DetailsCloseHandler = (e) => {\r\n    const clickedOnDark = e.target.classList.contains(\"dark_block\")\r\n      ? true\r\n      : false;\r\n    if (clickedOnDark) {\r\n      history.push(\"/\");\r\n      /// return the scroller to main page\r\n      document.body.style.overflow = \"auto\";\r\n    }\r\n  };\r\n\r\n  const getStars = (stars) => {\r\n    const arrayOfStars = [];\r\n    for (let loop = 0; loop != 5; loop++) {\r\n      if (stars > loop) {\r\n        arrayOfStars.push(<img src={full_star} />);\r\n      } else arrayOfStars.push(<img src={empty_star} />);\r\n    }\r\n    return arrayOfStars;\r\n  };\r\n  const getPlatform = (platforms) => {\r\n    const arrayOfPlatforms = [];\r\n    platforms.forEach((currentPlatform) => {\r\n      console.log(currentPlatform.platform.name);\r\n      switch (currentPlatform.platform.name) {\r\n        case \"Xbox One\":\r\n          arrayOfPlatforms.push(xbox);\r\n          break;\r\n        case \"PC\":\r\n          arrayOfPlatforms.push(xbox);\r\n          break;\r\n        case \"Xbox Series S/X\":\r\n          arrayOfPlatforms.push(xbox);\r\n          break;\r\n        case \"PlayStation 5\":\r\n        case \"PlayStation 4\":\r\n          //arrayOfPlatforms.push(<img src={playstation} alt=\"playstation\" />);\r\n          arrayOfPlatforms.push(playstation);\r\n          break;\r\n        default:\r\n          //arrayOfPlatforms.push(<img src={playstation} alt=\"playstation\" />);\r\n          arrayOfPlatforms.push(playstation);\r\n      }\r\n    });\r\n    return arrayOfPlatforms;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!game.name) {\r\n    }\r\n  }, []);\r\n  return (\r\n    <>\r\n      {!isLoading && (\r\n        <Dark\r\n          layoutId={id.id}\r\n          onClick={DetailsCloseHandler}\r\n          className=\"dark_block\"\r\n          style={game.name ? { display: \"block\" } : { display: \"none\" }}\r\n        >\r\n          {console.log(\"xxxxxxxxx:\" + JSON.stringify(id.id))}\r\n          <WhiteDetailsBlock>\r\n            <TopDetails>\r\n              <div className=\"main_details\">\r\n                <h2>{game.name}</h2>\r\n                <h3>{`Rating: ${game.rating}`}</h3>\r\n                <div className=\"stars\">{getStars(game.rating)}</div>\r\n                <motion.img\r\n                  layoutId={game.background_image}\r\n                  src={game.background_image}\r\n                />\r\n                <p>{`Disc: ${game.description_raw}`}</p>\r\n              </div>\r\n              <div>\r\n                <h2>Platforms:</h2>\r\n                <div className=\"platforms\">\r\n                  {game.platforms &&\r\n                    getPlatform(game.platforms).map((currentPlatform) => (\r\n                      <img src={currentPlatform} alt={currentPlatform} />\r\n                    ))}\r\n                </div>\r\n              </div>\r\n            </TopDetails>\r\n\r\n            <div className=\"screens\">\r\n              {screen.results &&\r\n                screen.results.map((currentScreen, index) => (\r\n                  <div>\r\n                    <img\r\n                      src={getResizedImg(currentScreen.image, 640)}\r\n                      key={index}\r\n                      alt=\"xx\"\r\n                    />\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </WhiteDetailsBlock>\r\n        </Dark>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Dark = styled(motion.div)`\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  width: 100%;\r\n  position: fixed;\r\n  min-height: 100vh;\r\n  top: 0px;\r\n  left: 0px;\r\n  overflow: scroll;\r\n  z-index: 10;\r\n  &::-webkit-scrollbar {\r\n    width: 0.5em;\r\n  }\r\n  &::-webkit-scrollbar-track {\r\n    background-color: #7e5b5b;\r\n  }\r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: green;\r\n    border-radius: 2px;\r\n  }\r\n  &::-webkit-scrollbar-track {\r\n    background-color: white;\r\n  }\r\n`;\r\nconst WhiteDetailsBlock = styled.div`\r\n  background-color: white;\r\n  width: 80%;\r\n  left: 10%;\r\n  padding: 40px 40px;\r\n  margin: 0 auto;\r\n  margin-top: 20px;\r\n  border-radius: 4px;\r\n  position: absolute;\r\n\r\n  img {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst TopDetails = styled(motion.div)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  .main_details {\r\n    p {\r\n      width: 80%;\r\n    }\r\n    .stars img {\r\n      width: 20px;\r\n    }\r\n  }\r\n  .platforms {\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n  }\r\n  .platforms {\r\n    img {\r\n      width: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default GameDetails;\r\n","C:\\Users\\boze\\Desktop\\c#\\project\\ignite\\src\\Utils.js",[],"C:\\Users\\boze\\Desktop\\c#\\project\\ignite\\src\\components\\Nav.js",[],"C:\\Users\\boze\\Desktop\\c#\\project\\ignite\\src\\animation.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":26},{"ruleId":"88","severity":1,"message":"92","line":7,"column":10,"nodeType":"90","messageId":"91","endLine":7,"endColumn":22},{"ruleId":"88","severity":1,"message":"93","line":11,"column":10,"nodeType":"90","messageId":"91","endLine":11,"endColumn":14},{"ruleId":"94","severity":1,"message":"95","line":53,"column":28,"nodeType":"96","messageId":"97","endLine":53,"endColumn":30},{"ruleId":"88","severity":1,"message":"98","line":6,"column":10,"nodeType":"90","messageId":"91","endLine":6,"endColumn":19},{"ruleId":"88","severity":1,"message":"99","line":1,"column":8,"nodeType":"90","messageId":"91","endLine":1,"endColumn":14},{"ruleId":"88","severity":1,"message":"100","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":21},{"ruleId":"88","severity":1,"message":"101","line":9,"column":8,"nodeType":"90","messageId":"91","endLine":9,"endColumn":13},{"ruleId":"88","severity":1,"message":"102","line":10,"column":8,"nodeType":"90","messageId":"91","endLine":10,"endColumn":15},{"ruleId":"88","severity":1,"message":"103","line":11,"column":8,"nodeType":"90","messageId":"91","endLine":11,"endColumn":16},{"ruleId":"94","severity":1,"message":"95","line":34,"column":29,"nodeType":"96","messageId":"97","endLine":34,"endColumn":31},{"ruleId":"104","severity":1,"message":"105","line":36,"column":27,"nodeType":"106","endLine":36,"endColumn":50},{"ruleId":"104","severity":1,"message":"105","line":37,"column":32,"nodeType":"106","endLine":37,"endColumn":56},{"ruleId":"107","severity":1,"message":"108","line":71,"column":6,"nodeType":"109","endLine":71,"endColumn":8,"suggestions":"110"},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'popularGames' is defined but never used.","'Link' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'loadGames' is defined but never used.","'styled' is defined but never used.","'useDispatch' is defined but never used.","'apple' is defined but never used.","'gamepad' is defined but never used.","'nintendo' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'game.name'. Either include it or remove the dependency array.","ArrayExpression",["113"],"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},"Update the dependencies array to be: [game.name]",{"range":"116","text":"117"},[2269,2271],"[game.name]"]